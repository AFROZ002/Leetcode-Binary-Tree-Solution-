/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        Stack<TreeNode>st1=new Stack<>();
        List<Integer>l1=new ArrayList<>();
        if(root==null){
            return l1;
        }

        st1.add(root);
        while(!st1.isEmpty()){
            TreeNode p=st1.pop();
            l1.add(p.val);
            if(p.left!=null){
                st1.add(p.left);
            }
            if(p.right!=null){
                st1.add(p.right);
            }

        }
     
        
   Collections.reverse(l1);
 return l1;
        
    }
   

}