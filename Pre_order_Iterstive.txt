/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
     Stack<TreeNode>st1=new Stack<>();
        List<Integer>l5=new ArrayList<>();
        if(root==null){
            return l5;
        }
        st1.push(root);
        while(!st1.isEmpty()){
            TreeNode p=st1.pop();
            l5.add(p.val);
            if(p.right!=null){
                st1.push(p.right);
                
            }
            if(p.left!=null){
                st1.push(p.left); 
                 
            }   
           
        }

      return l5;  
    }
}